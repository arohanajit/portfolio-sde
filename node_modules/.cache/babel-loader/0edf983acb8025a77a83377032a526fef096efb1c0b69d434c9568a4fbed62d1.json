{"ast":null,"code":"var _jsxFileName = \"/Users/arohanajit/Documents/git-repos/website/src/components/fieldsSDE/Projects.jsx\";\nimport React from \"react\";\nimport ProjectCard from \"../utilsDS/ProjectCard\";\nimport Face from \"../../images/face.webp\";\nimport FWMS from \"../../images/FWMS.jpeg\";\nimport MovieR from \"../../images/MovieR.jpeg\";\nimport Urban from \"../../images/urban.webp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"projects\",\n    className: \"p-[50px] md:pt-[100px] md:pl-[100px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"project-title\",\n      className: \"font-bold uppercase pb-[40px] text-[#01e2c7]\",\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n      project_title: \"Python - Webapp - Calorie Tracker\",\n      project_description: [\"Developed a web app, to streamline calorie and weight tracking by integrating with Google Calendar and offering multiple input methods \", \"including web and Google Forms. Utilized Python, Flask, Google APIs, and MySQL, handling data across various modules \", \"o calculate and remind users of their Total Daily Energy Expenditure (TDEE) through automated calendar events.\"],\n      project_url: \"https://github.com/arohanajit/tdee-website\",\n      tech_used: [\"Python\", \"Google Calendar API\", \"Flask\", \"Jupyter Notebook\", \"SQL\"],\n      project_image: MovieR,\n      youtube_video_url: \"https://www.youtube.com/watch?v=your-video-id-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n      project_title: \"MERN - Redux - Ecommerce Website\",\n      project_description: [\"Developed a full-featured eCommerce platform using the MERN stack & Redux, showcased in eCommerce Platform, supporting product\", \"management, user profiles, and PayPal integration. Enhanced experience with features like product reviews, search, pagination, and a \", \"complete checkout process, serving as a comprehensive solution for online retail.\"],\n      project_url: \"https://github.com/arohanajit/face-generation-gan\",\n      tech_used: [\"Python\", \"Convolutional Neural Networks\", \"Generatuve Adversarial Networks\", \"TensorFlow\"],\n      project_image: Face,\n      youtube_video_url: \"https://www.youtube.com/watch?v=your-video-id-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n      project_title: \"Python Package - `imgdata`\",\n      project_description: [\"Developed a Python package, a tool for automating the collection and organization of image datasets from popular stock image APIs like\", \"Pexels and Unsplash. The package supports image downloading, and dataset structuring into train, test, and validation sets, significantly\", \"streamlining the data preparation process for machine learning projects.\"],\n      project_url: \"https://pypi.org/project/imgdata/\",\n      tech_used: [\"Python\", \"Flask\", \"Django\"],\n      project_image: FWMS,\n      youtube_video_url: \"https://www.youtube.com/watch?v=your-video-id-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n      project_title: \"Urban Neighborhood\",\n      project_description: [\"Quantified and visualized urban data from multiple cities, applying advanced data cleaning, preprocessing, and analysis techniques to handle\", \"complex datasets, clustering 194+ neighborhoods by venue data (Foursquare API) and visualized results to present actionable insights into\", \"urban planning and development and achieving a deep understanding of city dynamics through geospatial and statistical analysis\"],\n      project_url: \"https://github.com/arohanajit/City_Analysis/blob/master/Ideal%20Neighborhood%20in%20Bangalore.pdf\",\n      tech_used: [\"Data Science\", \"Data Analysis\", \"Data Visualization\"],\n      project_image: Urban,\n      youtube_video_url: \"https://www.youtube.com/watch?v=your-video-id-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","ProjectCard","Face","FWMS","MovieR","Urban","jsxDEV","_jsxDEV","Projects","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","project_title","project_description","project_url","tech_used","project_image","youtube_video_url","_c","$RefreshReg$"],"sources":["/Users/arohanajit/Documents/git-repos/website/src/components/fieldsSDE/Projects.jsx"],"sourcesContent":["import React from \"react\";\nimport ProjectCard from \"../utilsDS/ProjectCard\";\nimport Face from \"../../images/face.webp\";\nimport FWMS from \"../../images/FWMS.jpeg\";\nimport MovieR from \"../../images/MovieR.jpeg\";\nimport Urban from \"../../images/urban.webp\";\n\nconst Projects = () => {\n  return (\n    <div id=\"projects\" className=\"p-[50px] md:pt-[100px] md:pl-[100px]\">\n      <h2\n        id=\"project-title\"\n        className=\"font-bold uppercase pb-[40px] text-[#01e2c7]\"\n      >\n        Projects\n      </h2>\n      <ProjectCard\n        project_title=\"Python - Webapp - Calorie Tracker\"\n        project_description={[\n          \"Developed a web app, to streamline calorie and weight tracking by integrating with Google Calendar and offering multiple input methods \",\n          \"including web and Google Forms. Utilized Python, Flask, Google APIs, and MySQL, handling data across various modules \",\n          \"o calculate and remind users of their Total Daily Energy Expenditure (TDEE) through automated calendar events.\"\n        ]}\n        project_url=\"https://github.com/arohanajit/tdee-website\"\n        tech_used={[\n          \"Python\",\n          \"Google Calendar API\",\n          \"Flask\",\n          \"Jupyter Notebook\",\n          \"SQL\"\n        ]}\n        project_image={MovieR}\n        youtube_video_url=\"https://www.youtube.com/watch?v=your-video-id-1\"\n      />\n      <ProjectCard\n        project_title=\"MERN - Redux - Ecommerce Website\"\n        project_description={[\n          \"Developed a full-featured eCommerce platform using the MERN stack & Redux, showcased in eCommerce Platform, supporting product\",\n          \"management, user profiles, and PayPal integration. Enhanced experience with features like product reviews, search, pagination, and a \",\n          \"complete checkout process, serving as a comprehensive solution for online retail.\"\n        ]}\n        project_url=\"https://github.com/arohanajit/face-generation-gan\"\n        tech_used={[\"Python\", \"Convolutional Neural Networks\", \"Generatuve Adversarial Networks\", \"TensorFlow\"]}\n        project_image={Face}\n        youtube_video_url=\"https://www.youtube.com/watch?v=your-video-id-2\"\n      />\n      <ProjectCard\n        project_title=\"Python Package - `imgdata`\"\n        project_description={[\n          \"Developed a Python package, a tool for automating the collection and organization of image datasets from popular stock image APIs like\",\n          \"Pexels and Unsplash. The package supports image downloading, and dataset structuring into train, test, and validation sets, significantly\",\n          \"streamlining the data preparation process for machine learning projects.\"\n          ]}\n        project_url=\"https://pypi.org/project/imgdata/\"\n        tech_used={[\"Python\", \"Flask\", \"Django\"]}\n        project_image={FWMS}\n        youtube_video_url=\"https://www.youtube.com/watch?v=your-video-id-3\"\n      />\n      <ProjectCard\n        project_title=\"Urban Neighborhood\"\n        project_description={[\n          \"Quantified and visualized urban data from multiple cities, applying advanced data cleaning, preprocessing, and analysis techniques to handle\",\n          \"complex datasets, clustering 194+ neighborhoods by venue data (Foursquare API) and visualized results to present actionable insights into\",\n          \"urban planning and development and achieving a deep understanding of city dynamics through geospatial and statistical analysis\"\n        ]}\n        project_url=\"https://github.com/arohanajit/City_Analysis/blob/master/Ideal%20Neighborhood%20in%20Bangalore.pdf\"\n        tech_used={[\"Data Science\", \"Data Analysis\", \"Data Visualization\"]}\n        project_image={Urban}\n        youtube_video_url=\"https://www.youtube.com/watch?v=your-video-id-4\"\n      />\n    </div>\n  );\n};\n\nexport default Projects;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,KAAK,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,oBACED,OAAA;IAAKE,EAAE,EAAC,UAAU;IAACC,SAAS,EAAC,sCAAsC;IAAAC,QAAA,gBACjEJ,OAAA;MACEE,EAAE,EAAC,eAAe;MAClBC,SAAS,EAAC,8CAA8C;MAAAC,QAAA,EACzD;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLR,OAAA,CAACN,WAAW;MACVe,aAAa,EAAC,mCAAmC;MACjDC,mBAAmB,EAAE,CACnB,yIAAyI,EACzI,uHAAuH,EACvH,gHAAgH,CAChH;MACFC,WAAW,EAAC,4CAA4C;MACxDC,SAAS,EAAE,CACT,QAAQ,EACR,qBAAqB,EACrB,OAAO,EACP,kBAAkB,EAClB,KAAK,CACL;MACFC,aAAa,EAAEhB,MAAO;MACtBiB,iBAAiB,EAAC;IAAiD;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,eACFR,OAAA,CAACN,WAAW;MACVe,aAAa,EAAC,kCAAkC;MAChDC,mBAAmB,EAAE,CACnB,gIAAgI,EAChI,uIAAuI,EACvI,mFAAmF,CACnF;MACFC,WAAW,EAAC,mDAAmD;MAC/DC,SAAS,EAAE,CAAC,QAAQ,EAAE,+BAA+B,EAAE,iCAAiC,EAAE,YAAY,CAAE;MACxGC,aAAa,EAAElB,IAAK;MACpBmB,iBAAiB,EAAC;IAAiD;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,eACFR,OAAA,CAACN,WAAW;MACVe,aAAa,EAAC,4BAA4B;MAC1CC,mBAAmB,EAAE,CACnB,wIAAwI,EACxI,2IAA2I,EAC3I,0EAA0E,CACxE;MACJC,WAAW,EAAC,mCAAmC;MAC/CC,SAAS,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAE;MACzCC,aAAa,EAAEjB,IAAK;MACpBkB,iBAAiB,EAAC;IAAiD;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,eACFR,OAAA,CAACN,WAAW;MACVe,aAAa,EAAC,oBAAoB;MAClCC,mBAAmB,EAAE,CACnB,8IAA8I,EAC9I,2IAA2I,EAC3I,gIAAgI,CAChI;MACFC,WAAW,EAAC,mGAAmG;MAC/GC,SAAS,EAAE,CAAC,cAAc,EAAE,eAAe,EAAE,oBAAoB,CAAE;MACnEC,aAAa,EAAEf,KAAM;MACrBgB,iBAAiB,EAAC;IAAiD;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACO,EAAA,GAjEId,QAAQ;AAmEd,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}